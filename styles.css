:root { /*allows defining variables globally, making them accessible across the entire document*/
    --primary-color: rgb(142, 199, 183); /*creates a custom property --primary-color that you can reuse anywhere in your CSS to apply this specific color just by using var(--primary-color) whenever you want to apply this color*/
}

html,
body {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*to make padding and borders included in an element’s total width and height*/
    height: 100%; /*ensures the body takes the full height of the page*/
    font-family: Arial, Helvetica, sans-serif;
    background-color: #f4f4f4;
    color: #333;
    line-height: 1.6;
}

*,
*::before, 
*::after {
    box-sizing: inherit; /*Applies the box-sizing: border-box rule to all elements and their pseudo-elements (before and after), ensuring consistent sizing*/
}

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.navbar {
    background-color: rgb(128, 128, 128);
    width: 100%; /*width is always taking the 100% of the page regarding from what device*/
    height: 10vh; /*height of the navbar will adjust according to the screen height, making it responsive*/
    display: flex; /*allows elements inside a container (like the navbar) to be arranged flexibly. It makes it easier to align and distribute items inside the navbar*/
    align-items: center;/*content inside the navbar is vertically centered along the container'*/
    padding-left: 2vw; /*padding is used on both sides for spacing. we used vw since the width is going to change in diff viewports*/
    padding-right: 2vw; /*ensure that the content inside the navbar doesn’t touch the edges of the screen*/
    justify-content: space-between; /*first element will align to the left, and the last element will align to the right, with the remaining elements spaced evenly*/
    position: fixed; /*this fixes the navbar in place relative to the browser window, meaning it will stay at the same spot on the screen even when the user scrolls the page*/
    top: 0; /*navbar is positioned at the very top of the screen, starting from 0 px from the top edge of the viewport*/
    z-index: 1000; /*it controls the stacking order of elements. Elements with a higher z-index appear in front of elements with a lower z-index. Making the navbar that has 1000 z-index on top of the other content on the page, regarding if you scroll*/
}

.primary-color {
    color: var(--primary-color); /*using the green color for all the text in the class primary-color in html*/
}

.logo {
    font-weight: bold; /*make text bold*/
    font-size: 5vh; /*5 viewport height, means the hight of the text will changes depending on the device*/
    color: var(--primary-color); /*make logos color green*/
}

.name {
    font-weight: normal; /*keep text normal not bolded*/
}

.nav-button {
    display: flex; /*make them align and space easily like in a row*/
    justify-content: space-between; /*equal space distributed between elements*/
    gap: 30px; /*gap of 30px will be applied between each of the items. It provides a consistent space between the buttons*/
}

.nav-button a {
    background-color: transparent; /*the buttons are transparent taking the color of the navbar*/
    border-color: transparent; /*creat a border but keep transparent*/
    font-size: 2.5vh;
    border-radius: 10px; /*the curve of the edges are 10px*/
    color: white; /*text color is white*/
    transition: background-color 0.2s ease-in;
    padding-left: 5px; /*the space on the left and right of the text from the border*/
    padding-right: 5px;
    text-decoration: none; /*to get rid of the underline that are under the links*/
}

.nav-button a:hover {
    background-color: var(--primary-color); /*when touching the buttons the backgrout will change to green while the border stays white bc its transparent to the navbar background*/
}

.nav-button {
    position: relative; /*for absolute positioning of dropdown*/
}

.dropdown-btn {
    background-color: transparent;
    border: 2px solid var(--primary-color);
    color: white;
    padding: 10px 25px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1.5vh;
}

.dropdown-content {
    display: none; /*hide the dropdown content by default*/
    position: absolute; /*position it relative to the dropdown button*/
    background-color: rgb(128, 128, 128);
    box-shadow: 0px 0px 18px 0 rgba(0, 0, 0, 0.2);
    z-index: 1;
    margin-top: 5px;
    border-radius: 5px;
    width: 100%; /*full width of dropdown*/
}

.dropdown-content a {
    color: white;
    padding: 12px 16px;
    text-decoration: none;
    display: block; /*display links as block elements*/
}

.dropdown-content a:hover {
    background-color: var(--primary-color);
}

.nav-button:hover .dropdown-content {
    display: block; /*show the dropdown when hovering over the nav button*/
}

.dropdown-btn:focus + .dropdown-content {
    display: block; /*show the dropdown when the button is focused*/
}

main {
    padding-top: 10vh; /*home page starts after 10 veiwport heigh from the webpage. useful since I have a navbar and I dont want the content to overlap*/
    min-height: 100vh; /*it ensures that the content spans the full height of the screen, even if there is not enough content to fill it naturally*/
    display: flex;
    flex-direction: column; /*sets the direction of the flex container’s main axis to column, meaning that child elements inside the main element will be stacked vertically (from top to bottom) instead of the default horizontal row*/
}

.main-div {
    display: flex; /*allows for flexible and dynamic alignment and spacing of its child elements*/
    flex-direction: column; /*changes the default horizontal layout of Flexbox to a vertical layout make the text from top to bottom*/
    align-items: flex-start; /*child elements will be aligned to the left side of the container (the starting point for a row). the reason why I did not use flex-direction for it because it will make it align in the horizontal axis*/
    background-color: rgb(68, 68, 68);
    font-size: 4vw;
    font-weight: bold;
    height: 100%; /*take up the full height of its parent container, ensuring it stretches across the entire height of the viewport*/
    padding: 12vh; /*the 12% viewport height padding around the content, provides space between the text and the container’s edge*/
}

.main-div a {
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding-left: 20px;
    padding-right: 20px;
    border-radius: 10px;
    color: white;
    font-size: 2vw;
    font-weight: normal; /*not bold*/
    text-decoration: none; /*no line under projects*/
    transition: background-color 0.2s ease-in; /*background color will slowly change over 0.2 seconds when clicking on button*/
}

.main-div a:hover {
    background-color: var(--primary-color); 
}

.primary {
    color: var(--primary-color); /*make Tala Bashanfar green*/
}

.text-white {
    color: white;
}

section {
    padding: 50px; /*padding 50px from all directions*/
    background-color: #fff;
    font-size: 2vw;
    text-align: center;
}
.me {
    color: var(--primary-color);
}

.section-one {
    font-size: 5vw;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.section-one img {
    width: 30%; /*sets the width of the image to 30% of its containing element, it take the 30% of the devices screen it displays at*/
    height: auto; /*maintain the original proportions of the image*/
    border-radius: 20px; 
    padding-top: 1vh;/*vh because the padding(top and bottoms) won't be affected vertically but horizontally in different viewports*/
    padding-bottom: 1vh;
}

.regular-font {
    font-size: 1.5vw;
    font-weight: bold;
}

.section-one p {
    font-size: 1.2vw;
}

.section-two-span {
    width: 100%; /*sets the width of the element to 100% of its parent container*/
    text-align: start; /*start from the left side of the container(left to right)*/
}

#contact .contact {
    flex-direction: column;
    max-width: 1200px; /*the container will not grow wider than 1200px, even on large screens*/
    margin: 0 auto; /*top and bottom margins are set to 0 (no vertical space), while the left and right margins are set to auto, which will center the element horizontally*/
    width: 90%; /*sets the width of the .contact container to 90% of the viewport width*/
}
#contact .contactItems {
    width: 100%;
}
#contact .contactItem {
    width: 80%;
    padding: 20px;
    text-align: center;
    border-radius: 10px;
    padding: 30px;
    margin: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    box-shadow: 0px 0px 18px 0 #0000002c;
    transition: 0.3s ease box-shadow;
}
#contact .icon {
    width: 70px;
    margin: 0 auto;
    margin-bottom: 10px;
}
input[type='text'],
textarea {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box; /*total width of the input/textarea includes both the padding and border*/
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;/*resize the textarea vertically (up or down)*/
}
#contact
    .contactItems
    .contactItem
    .contactInfo
    .phpEmailForm
    input[type='email'] {
    height: 44px;
    width: 100%;
    margin-bottom: 12px;
}
#contact .contactItems .contactItem .contactInfo .phpEmailForm .button {
    display: inline-block;
    padding: 5px 5px;
    color: white;
    background-color: transparent;
    border: 2px solid rgb(142, 199, 183);
    font-size: 2rem;
    text-transform: uppercase;
    letter-spacing: 0.1rem; /*extra spacing between each letter in the button text, with the spacing set to 0.1 rem (relative to the root font size)*/
    margin-top: 5px;
    transition: 0.3s ease;
    transition-property: background-color, color;
}

#contact .contactItems .contactItem .contactInfo .phpEmailForm .button {
    color: white;
    background-color: rgb(142, 199, 183);
}

#footer {
    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);
}
#footer .footer {
    min-height: 200px;
    flex-direction: column;
    padding-top: 50px;
    padding-bottom: 10px;
}
#footer h2 {
    color: white;
    font-weight: 500;
    font-size: 1.8rem;
    letter-spacing: 0.1rem;
    margin-top: 10px;
    margin-bottom: 10px;
}
#footer p {
    color: white;
    font-size: 1.3rem;
}

form {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    max-width: 600px; 
    margin: 0 auto; 
}

form label {
    display: block;
    width: 100%;
    margin-bottom: 5px;
    text-align: left; 
}

form input,
form textarea {
    width: 100%;
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
}

form button {
    padding: 10px 20px;
    background-color: #29323c;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer; /*changes the cursor to a pointer (usually a hand icon) when the user hovers over the button*/
    margin: 10px;
    position: relative;
    left: 0
}

form input[type='reset'] {
    padding: 10px 20px;
    background-color: #ccc;
    color: black;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 10px;
    position: relative;
    left: 0
}

form p {
    font-size: 12px;
    color: #888;
    text-align: left;
    width: 100%;
}

#footer {
    background-color: rgb(142, 199, 183);
}
#footer .footer {
    min-height: 200px;
    flex-direction: column;
    padding-top: 50px;
    padding-bottom: 10px;
    background-image: linear-gradient(to bottom, rgb(142, 199, 183), white);
}
#footer h2 {
    color: rgb(22, 22, 22);
    font-weight: 500;
    font-size: 1.8rem;
    letter-spacing: 0.1rem;
    margin-top: 10px;
    margin-bottom: 10px;
}
#footer p {
    color: rgb(22, 22, 22);
    font-size: 1.3rem;
}

.section-one a {
    background-color: transparent;
    border: 2px solid var(--primary-color);
    padding-left: 20px;
    padding-right: 20px;
    border-radius: 10px;
    color: rgb(0, 0, 0);
    font-size: 2vw;
    font-weight: normal;
    text-decoration: none;
    transition: background-color 0.2s ease-in;
}

.section-one a:hover {
    background-color: var(--primary-color);
    color: white;
}
.custom-anchor {
    font-size: 1vw !important;
    width: 100%;
}
.custom-span-div {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    font-size: 5vw;
}

/*Responsive Styles*/
@media (max-width: 768px) {
    #footer h2, 
    #footer p {
        font-size: 1rem; 
    }

    form {
        max-width: 100%; 
        padding: 0 10px; 
    }
}
/*ensure navbar items align in a row for small screens*/
@media (max-width: 480px) {
    .navbar {
        flex-direction: row; /*maintain row direction*/
        justify-content: space-between; /*spread out Tala and menu button*/
        align-items: center; /*align vertically in the middle*/
        padding: 1vh 2vw; 
    }

    .navbar .logo {
        font-size: 5vh; /*adjust logo size for better spacing*/
    }

    .nav-button {
        flex-direction: row; /*ensure buttons stay in one row*/
        gap: 10px; /*reduce gap for smaller screens*/
    }

    .nav-button a {
        font-size: 3vh; /*adjust button size*/
        padding: 5px 10px; /*smaller padding for better fit*/
    }
}
